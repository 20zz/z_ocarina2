/*
 * $Id: z_disk_function.decl,v 1.1.1.1 2003/03/10 22:42:45 tong Exp $
 *
 * n64dd用オプション関数定義
 *
 * $Log: z_disk_function.decl,v $
 * Revision 1.1.1.1  2003/03/10 22:42:45  tong
 * new OBJ tree for ocarina from Nintendo
 *
 * Revision 2.2  1998-10-27 21:24:41+09  soejima
 * ＰＡＬ仕様
 *
 * Revision 2.1  1998-10-22 20:45:49+09  zelda
 * ＲＯＭ出しバージョン(NTSC)
 *
 * Revision 1.13  1998/10/15 07:02:16  hayakawa
 * *** empty log message ***
 *
 * Revision 1.12  1998-10-15 09:27:18+09  hayakawa
 * *** empty log message ***
 *
 * Revision 1.11  1998-10-14 23:21:26+09  hayakawa
 * *** empty log message ***
 *
 * Revision 1.10  1998-10-13 09:40:36+09  hayakawa
 * *** empty log message ***
 *
 * Revision 1.9  1998-10-09 21:23:12+09  hayakawa
 * *** empty log message ***
 *
 * Revision 1.8  1998-10-03 23:01:26+09  hayakawa
 * *** empty log message ***
 *
 * Revision 1.7  1998-10-02 21:13:15+09  hayakawa
 * *** empty log message ***
 *
 * Revision 1.6  1998-10-01 22:53:00+09  hayakawa
 * *** empty log message ***
 *
 * Revision 1.5  1998-09-30 20:02:07+09  hayakawa
 * *** empty log message ***
 *
 * Revision 1.4  1998-09-30 11:43:18+09  hayakawa
 * *** empty log message ***
 *
 * Revision 1.3  1998-09-25 23:07:47+09  hayakawa
 * DISK変更
 *
 * Revision 1.2  1998-09-25 09:23:10+09  hayakawa
 * *** empty log message ***
 *
 * Revision 1.1  1998-09-22 21:57:41+09  hayakawa
 * Initial revision
 *
 * Revision 1.2  1998-09-21 23:16:13+09  hayakawa
 * *** empty log message ***
 *
 * Revision 1.1  1998-09-19 22:59:45+09  hayakawa
 * Initial revision
 *
 */

/* z_disk_function.c */
decl( void, InitialOptionTable, (n64dd_keeptable_t *keeptable))
decl( void, CleanupOptionTable, (void))

decl( void, room_dma, (Game_play *, Room_Info *, int ))
decl( void, room_scene, (Game_play *game_play))
decl( void, room_init, (Game_play *game_play))
decl( void, room_cleanup, (Game_play *game_play))

/* z_disk_map_exp.c */
decl( void, MapExpInit, 	(map_exp_data_tbl_t **map_exp_data_tbl_p))
decl( void, MapExpCleanup, 	(map_exp_data_tbl_t **map_exp_data_tbl_p))
decl( void, map_i_dma_init,	(map_exp_data_tbl_t *map_exp_data_tbl_p))
decl( void, map_i_dma_cleanup,	(void))
decl( int, map_i_dma, 		( Game_play *game_play ))
/* z_disk_map_mark.c */
decl( void, MapMarkInit, 	(MapMark (*(**)[34])[ MAX_MARKKIND ]))
decl( void, MapMarkCleanup, 	(MapMark (*(**)[34])[ MAX_MARKKIND ]))
/* z_disk_lmap_mark.c */
decl( void, LargeMapMarkInit,    (const LargeMapMark (**)[34][ MAX_MARKKIND ]))
decl( void, LargeMapMarkCleanup, (const LargeMapMark (**)[34][ MAX_MARKKIND ]))
/* z_disk_kaleido_scope.c */
decl( void, map_dma_init, 	( void ))
decl( void, map_dma_cleanup, 	( void ))
decl( int, map_dma, 		( Game_play *game_play ))
/* z_disk_scene_table.c */
decl( Scene_Data_Status *, GetSceneTable, (int, Scene_Data_Status *))
/* z_disk_omake.c */
decl( void, omake_move, 	( Game_play *game_play, pad_t *pad))
decl( void, omake_draw, 	( Game_play *game_play, Graph *graph ))
decl( int, SpotShowKansi, 	(Game_play *game_play))
/* z_disk_message.c */
#if defined(PAL_VERSION)
decl( void, message_init, 	(MSG_NT **, MSG_PT **, MSG_PT **, MSG_NT **))
decl( void, message_cleanup, 	(void))
decl( int, message_staff, 	(Kanfont *))
decl( int, message_nes, 	(Kanfont *))
decl( int, message_ger, 	(Kanfont *))
decl( int, message_fra, 	(Kanfont *))
#else
decl( void, message_init, 	(MSG_T **, MSG_NT **, MSG_NT **))
decl( void, message_cleanup, 	(void))
decl( int, message_staff, 	(Kanfont *))
decl( int, message_jpn, 	(Kanfont *))
decl( int, message_nes, 	(Kanfont *))
#endif
/* z_disk_scene_table.c */
decl( void, call_scene_proc, (Game_play *, void (*(*)[53])(Game_play *)))
/* z_std_dma.c */
decl(int, dmacopy_bg, (dma_t *, void *, u32, u32, void *, OSMesgQueue *, OSMesg))
decl(void, game_move, (Game *))
/* z_bg_breakwall.c */
decl(int, set_showdata, (Game_play *, char *, char **))

decl0(4)
decl0(3)
decl0(2)
decl0(1)
